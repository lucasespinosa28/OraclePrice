@using System.Threading;
@using TokenPrice.Web.Models
@using Nethereum.Web3
@using TokenPrice.Core.Chainlink;

<TokenRow TokenInfo=@Tokens />
<span>@Count</span>

@code {
    [Parameter]
    public string ContractAddress { get; set; }
    private int Count { get; set; } = 0;
    public static Web3 web3 { get; set; } = new Web3("");
    public TokenInformation Tokens { get; set; } = new TokenInformation();
    Oracle Oracle = new Oracle
    {
        Web3 = web3
    };
    protected override async Task OnInitializedAsync()
    {
        StartCountdown();
    }
    void StartCountdown()
    {
        var timer = new Timer(new TimerCallback(async _ =>
        {

            Count++;
            var result2 = await Oracle.GetDescriptionAsync(ContractAddress);
            var result1 = await Oracle.GetLastRoundDataAsync(ContractAddress);

            Tokens.LastPriceEth = TokenPrice.Core.Utils.WeiToEth(result1.Answer);
            Tokens.Name = result2[0];
            StateHasChanged();

        //InvokeAsync(() =>
        //{
        //});
    }), false, 0, 1000 * 30);
    }
}
