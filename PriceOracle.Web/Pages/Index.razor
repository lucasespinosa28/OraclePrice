@page "/"
@inject NavigationManager MyNavigationManager
@using System.Text.Json


<h2 class="text-center">Atual data is source Aave tokens,<a href="/chainlink">Change to Chainlink oracle tokens</a></h2>
<button class="btn btn-light btn-lg"  @onclick="(async () =>  LoadAave())">Click to load data</button>
@if (Load)
{
    <TableToken TokenAddress="@Tokens" />
}
@*<TimerCount />*@
@*<HistoricalData />*@
@*<SurveyPrompt Title="How is Blazor working for you?" />*@
@code
{

    public class Rootobject
    {
        public string[] Address { get; set; }
    }

    public List<string> AddressChainlink { get; set; } = new List<string>();
    public string text { get; set; }
    public List<TokenAddressSymbol> TokenAddress { get; set; } = new List<TokenAddressSymbol>();
    public List<TokenAddressSymbol> TokenAddress1 { get; set; } = new List<TokenAddressSymbol>();
    public List<TokenAddressSymbol> Tokens { get; set; } =
    new List<TokenAddressSymbol>();
    public bool Load { get; set; } = false;

    public HttpClient HttpClient { get; set; } = new HttpClient();
    async Task LoadAave()
    {
        Tokens = TokenAddress;
        Load = true;
    }

    protected override async Task OnInitializedAsync()
    {
        var aave = new Aave(Connect.Web3);
        var protocolDataProvider = aave.ProtocolDataProvider();
        var result = await protocolDataProvider.GetAllReservesTokensQueryAsync();
        foreach (var token in result.ReserveTokens)
        {
            if (token.Symbol == "WBTC")
            {
                token.Symbol = "BTC";
            }
            if (token.Symbol != "WETH")
            {
                TokenAddress.Add(new TokenAddressSymbol { Address = token.TokenAddress, Symbol = token.Symbol });
            }
        }
    }
}
